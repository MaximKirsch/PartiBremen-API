# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: maximkirsch/partibremendockerhubrepo:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: prepare ssh
        run:
          -mkdir -p ~/.ssh/
          -mkdir -p ~/.ssh/known_hosts
      -
        name: deploydev
        run:
          -ssh-keyscan -H ${{ secrets.HOSTNAME }} >> ~/.ssh/known_hosts
          -ssh -T -i $PROD_SSH_KEY_PRIVATE $SSH_USER@$SSH_HOSTNAME
          "
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} ${{ secrets.REGISTRY_URL }}
          && docker service update --image partibremendockerhubrepo:latest --with-registry-auth parti_backend
          "


